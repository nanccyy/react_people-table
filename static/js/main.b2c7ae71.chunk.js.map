{"version":3,"sources":["components/HomePage/HomePage.jsx","api/people.js","components/PersonName/PersonName.jsx","components/PersonRow/PersonRow.jsx","components/PeoplePage/PeoplePage.jsx","App.jsx","index.js"],"names":["HomePage","className","getPeople","a","fetch","response","people","json","PersonName","name","match","slug","sex","setUrl","location","useEffect","params","id","classNames","link_m","link_f","to","PersonRow","useRouteMatch","useLocation","useState","url","isPersonFound","parent","find","person","map","born","died","motherName","fatherName","key","path","render","PeoplePage","peopleFromServer","setPeopleFromServer","setPeople","history","useHistory","searchParams","URLSearchParams","search","get","setName","then","data","filter","toLowerCase","startsWith","type","value","onChange","event","target","set","push","toString","App","pathname","activeClassName","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b2c7ae71.chunk.js","sourcesContent":["import React from 'react';\nimport {useLocation, useRouteMatch, Redirect} from 'react-router-dom';\n\nexport const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async() => {\n  const response = await fetch(BASE_URL);\n  const people = response.json();\n\n  return people;\n};\n","import React, { useEffect } from 'react';\nimport { NavLink, useHistory} from 'react-router-dom';\nimport './PersonName.scss';\nimport classNames from 'classnames';\n\nexport const PersonName = ({ name, match, slug, sex, location, setUrl }) => {\n  useEffect(() => {\n   setUrl(match.params.id)\n  }, [match.params.id])\n\n  return (\n    <NavLink\n      className={classNames({\n        link_m: sex === 'm',\n        link_f: sex === 'f'\n      })}\n      to={`/people/${slug}`}\n      >\n        {name}\n    </NavLink>\n  )\n}","import React, { useState } from 'react';\nimport { PersonName } from '../PersonName/PersonName';\nimport { Route, NavLink, Link, useRouteMatch, useLocation } from 'react-router-dom';\nimport './PersonRow.scss';\nimport { PeoplePage } from '../PeoplePage/PeoplePage';\nimport classNames from 'classnames';\n\nexport const PersonRow = ({ people }) => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const [url, setUrl] = useState('');\n  const isPersonFound = (parent) => {\n    return people.find(person => person.name === parent);\n  };\n\n  return (\n    <>\n      {people.map(person => {\n        const { slug, name, sex, born, died, motherName, fatherName } = person;\n        return (\n          <Route key={slug} path={\"/people/:id?\"} render={({ match, location }) => (\n            <>\n              <tr \n              className={classNames({\n                \"is-selected\": slug === url\n              })}>\n                <td>\n                  <PersonName\n                    sex={sex}\n                    name={name}\n                    match={match}\n                    slug={slug}\n                    location={location}\n                    setUrl={setUrl}\n                  >\n                  </PersonName>\n                </td>\n                <td>{sex}</td>\n\n                <td>{born}</td>\n                <td>{died}</td>\n                <td>\n                  {isPersonFound(motherName) ?\n                  <PersonName\n                  sex={isPersonFound(motherName).sex}\n                  name={motherName}\n                  match={match}\n                  slug={isPersonFound(motherName).slug}\n                  location={location}\n                  setUrl={setUrl}>\n                  </PersonName>\n                  : <>{motherName}</>\n                  }\n                </td>\n                <td>\n                  {isPersonFound(fatherName) ?\n                   <PersonName\n                   sex={isPersonFound(fatherName).sex}\n                   name={fatherName}\n                   match={match}\n                   slug={isPersonFound(fatherName).slug}\n                   location={location}\n                   setUrl={setUrl}>\n                   </PersonName>\n                  : <>{fatherName}</>\n                  }\n                </td>\n              </tr>\n            </>\n          )}>\n          </Route>\n        )\n      })\n      }\n\n    </>\n  )\n}","import React, { useEffect, useState, useCallback } from 'react';\nimport {getPeople} from '../../api/people';\nimport {PersonRow} from '../PersonRow/PersonRow';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nexport const PeoplePage = ({match}) => {\n  const [peopleFromServer, setPeopleFromServer] = useState([])\n  const [people, setPeople] = useState([]);\n  \n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query');\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getPeople().then(data => (setPeople(data), setPeopleFromServer(data)));\n  }, []);\n\nconst filter = () => {\n  if (name) {\n    setPeople(peopleFromServer.filter(person => \n      person.name.toLowerCase().startsWith(name)\n      || (person.motherName && person.motherName.toLowerCase().startsWith(name))\n      || (person.fatherName && person.fatherName.toLowerCase().startsWith(name))));\n  } else {\n    setPeople(peopleFromServer);\n  } \n}\n\nuseEffect(() => {\nfilter()\n}, [name])\n\n  return (\n    <>\n    <h1 className=\"title\">This is People Page</h1>\n    <input\n    className=\"input is-primary\"\n     type=\"text\"\n     value={name}\n     onChange={(event) => {\n       setName(event.target.value);\n       searchParams.set('query', event.target.value);\n       history.push({\n         search: searchParams.toString(),\n       });\n     }}\n     >\n    </input>\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n     <PersonRow people={people} ></PersonRow>\n      </tbody>\n    </table>\n    </>\n  )\n}","import React from 'react';\nimport {Switch, Route, Link, NavLink, useRouteMatch, useLocation, Redirect} from 'react-router-dom';\nimport {HomePage} from './components/HomePage/HomePage';\nimport {PeoplePage} from './components/PeoplePage/PeoplePage';\nimport './App.scss';\nimport 'bulma/css/bulma.css';\n\nconst App = () => {\n  if (useLocation().pathname === '/home') {\n    return <Redirect to=\"/\" />\n  }\n  return (\n  <div className=\"App\">\n    <nav className=\"navbar\">\n      <ul className=\"navbar-brand\">\n        <li><NavLink to=\"/\" activeClassName=\"nav__link_active\" className=\"navbar-item\"><h1>Home Page</h1></NavLink></li>\n        <li><NavLink to=\"/people\" activeClassName=\"nav__link_active\" className=\"navbar-item\"><h1>People Page</h1></NavLink></li>\n      </ul>\n    </nav>\n        \n    <Switch>\n      <Route path=\"/\" exact component={HomePage}></Route>\n      <Route path=\"/people\"  component={PeoplePage}></Route>\n    </Switch>\n  </div>\n)\n  };\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}